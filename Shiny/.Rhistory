rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
print(length(x_test_demean*beta_s))
print(length(x_beta_test))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
foo <- function(alpha) {
x_test <- c(rbinom(n=1000*alpha,size=1,p=0.4),
rbinom(n=1000*(1-alpha),size=1,p=0.25))
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==length(x_test),
msg="Length of x_test does not match length of x_test_demean??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
print(length(x_beta_test))
print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
foo <- function(alpha) {
x_test <- c(rbinom(n=1000*alpha,size=1,p=0.4),
rbinom(n=1000*(1-alpha),size=1,p=0.25))
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==length(x_test),
msg="Length of x_test does not match length of x_test_demean??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
print(length(x_beta_test))
print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
foo <- function(alpha) {
x_test <- c(rbinom(n=1000*alpha,size=1,p=0.4),
rbinom(n=1000*(1-alpha),size=1,p=0.25))
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==length(x_test),
msg="Length of x_test does not match length of x_test_demean??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_test_demean)==length(x_beta_test),
msg="Length of x_test does not match length of x_test_demean??")
print(length(x_beta_test))
print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
foo <- function(alpha) {
x_test <- c(rbinom(n=1000*alpha,size=1,p=0.4),
rbinom(n=1000*(1-alpha),size=1,p=0.25))
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==length(x_test),
msg="Length of x_test does not match length of x_test_demean??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
#assertthat::assert_that(length(x_test_demean)==length(x_beta_test),
#                        msg="Length of x_beta_test does not match length of x_test_demean??")
print(length(x_beta_test))
print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
alpha=0.7
x_test <- c(rbinom(n=1000*alpha,size=1,p=0.4),
rbinom(n=1000*(1-alpha),size=1,p=0.25))
length(x_test)
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
length(x_test_demean)
foo <- function(alpha) {
x_test <- c(rbinom(n=1000*alpha,size=1,p=0.4),
rbinom(n=1000*(1-alpha),size=1,p=0.25))
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==1000,
msg="Length of x_test_demean is not 1000??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_beta_test)==1000,
msg="Length of x_beta_test is not 1000??")
print(length(x_beta_test))
print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
foo <- function(alpha) {
first_part <- rbinom(n=1000*alpha,size=1,p=0.4)
second_part <- rbinom(n=1000*(1-alpha),size=1,p=0.25)
assertthat::assert_that(length(first_part)==1000*alpha,
msg=paste0("Length of x_test is not ",1000*alpha,"??"))
assertthat::assert_that(length(second_part)==1000*(1-alpha),
msg=paste0("Length of x_test is not ",1000*(1-alpha),"??"))
x_test <- c(first_part,
second_part)
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==1000,
msg="Length of x_test_demean is not 1000??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_beta_test)==1000,
msg="Length of x_beta_test is not 1000??")
#print(length(x_beta_test))
#print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
alpha=0.3
rbinom(n=1000*alpha,size=1,p=0.4)
length(rbinom(n=1000*alpha,size=1,p=0.4))
length(rbinom(n=1000*(1-alpha),size=1,p=0.25))
foo <- function(alpha) {
first_part <- rbinom(n=1000*alpha,size=1,p=0.4)
second_part <- rbinom(n=1000*(1-alpha),size=1,p=0.25)
assertthat::assert_that(length(first_part)==1000*alpha,
msg=paste0("Length of first_part is not ",1000*alpha," but ", length(first_part), "??"))
assertthat::assert_that(length(second_part)==1000*(1-alpha),
msg=paste0("Length of second_part is not ",1000*(1-alpha)," but ", length(second_part),"??"))
x_test <- c(first_part,
second_part)
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==1000,
msg="Length of x_test_demean is not 1000??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_beta_test)==1000,
msg="Length of x_beta_test is not 1000??")
#print(length(x_beta_test))
#print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
first_part
alpha=0.3
first_part <- rbinom(n=1000*alpha,size=1,p=0.4)
second_part <- rbinom(n=1000*(1-alpha),size=1,p=0.25)
assertthat::assert_that(length(first_part)==1000*alpha,
msg=paste0("Length of first_part is not ",1000*alpha," but ", length(first_part), "??"))
assertthat::assert_that(length(second_part)==1000*(1-alpha),
msg=paste0("Length of second_part is not ",1000*(1-alpha)," but ", length(second_part),"??"))
x_test <- c(first_part,
second_part)
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
length(rbinom(n=1000*alpha,size=1,p=0.4))==1000*alpha
foo <- function(alpha) {
first_part <- rbinom(n=1000*alpha,size=1,p=0.4)
second_part <- rbinom(n=1000*(1-alpha),size=1,p=0.25)
assertthat::assert_that(length(first_part)==1000*alpha,
msg=paste0("Length of first_part is not ",1000*alpha," but ", length(first_part), "??"))
assertthat::assert_that(length(second_part)==1000*(1-alpha),
msg=paste0("Length of second_part is not ",1000*(1-alpha)," but ", length(second_part),"??"))
x_test <- c(first_part,
second_part)
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==1000,
msg="Length of x_test_demean is not 1000??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_beta_test)==1000,
msg="Length of x_beta_test is not 1000??")
#print(length(x_beta_test))
#print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
1+1
foo <- function(alpha) {
first_part <- rbinom(n=1000*alpha,size=1,p=0.4)
second_part <- rbinom(n=1000*(1-alpha),size=1,p=0.25)
assertthat::assert_that(length(first_part)==1000*alpha,
msg=paste0("Length of first_part is not ",1000*alpha," but ", length(first_part), "??"))
assertthat::assert_that(length(second_part)==1000*(1-alpha),
msg=paste0("Length of second_part is not ",1000*(1-alpha)," but ", length(second_part),"??"))
x_test <- c(first_part,
second_part)
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==1000,
msg="Length of x_test_demean is not 1000??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_beta_test)==1000,
msg="Length of x_beta_test is not 1000??")
#print(length(x_beta_test))
#print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
foo <- function(alpha) {
first_part <- rbinom(n=1000*alpha,size=1,p=0.4)
second_part <- rbinom(n=1000*(1-alpha),size=1,p=0.25)
# assertthat::assert_that(length(first_part)==1000*alpha,
#                         msg=paste0("Length of first_part is not ",1000*alpha," but ", length(first_part), "??"))
# assertthat::assert_that(length(second_part)==1000*(1-alpha),
#                         msg=paste0("Length of second_part is not ",1000*(1-alpha)," but ", length(second_part),"??"))
x_test <- c(first_part,
second_part)
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==1000,
msg="Length of x_test_demean is not 1000??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
rho <- 0
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_beta_test)==1000,
msg="Length of x_beta_test is not 1000??")
#print(length(x_beta_test))
#print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA)
}
rho <- 0.5
foo <- function(alpha) {
first_part <- rbinom(n=1000*alpha,size=1,p=0.4)
second_part <- rbinom(n=1000*(1-alpha),size=1,p=0.25)
# assertthat::assert_that(length(first_part)==1000*alpha,
#                         msg=paste0("Length of first_part is not ",1000*alpha," but ", length(first_part), "??"))
# assertthat::assert_that(length(second_part)==1000*(1-alpha),
#                         msg=paste0("Length of second_part is not ",1000*(1-alpha)," but ", length(second_part),"??"))
x_test <- c(first_part,
second_part)
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==1000,
msg="Length of x_test_demean is not 1000??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_beta_test)==1000,
msg="Length of x_beta_test is not 1000??")
#print(length(x_beta_test))
#print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA+(1-ALPHA)*rho)
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA+(1-ALPHA)*rho/0.81^2)
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Ratio = ", mean(results_foo$COV)/mean(results_foo$VAR), ". Expected = ", ALPHA+(1-ALPHA)*rho/0.81)
}
foo <- function(alpha) {
first_part <- rbinom(n=1000*alpha,size=1,p=0.4)
second_part <- rbinom(n=1000*(1-alpha),size=1,p=0.25)
# assertthat::assert_that(length(first_part)==1000*alpha,
#                         msg=paste0("Length of first_part is not ",1000*alpha," but ", length(first_part), "??"))
# assertthat::assert_that(length(second_part)==1000*(1-alpha),
#                         msg=paste0("Length of second_part is not ",1000*(1-alpha)," but ", length(second_part),"??"))
x_test <- c(first_part,
second_part)
assertthat::assert_that(length(x_test)==1000,
msg="Length of x_test is not 1000??")
x_test_demean <- x_test - c(rep(mean(x_test[1:(1000*alpha)]),1000*alpha),
rep(mean(x_test[((1000*alpha)+1):1000]),(1000-1000*alpha)))
assertthat::assert_that(length(x_test_demean)==1000,
msg="Length of x_test_demean is not 1000??")
beta_s <- rnorm(n=1,mean=0,sd=sqrt(0.81))
beta_t <- beta_s*rho + rnorm(1)*sqrt(0.81*(1-rho^2))
beta_s <- beta_s/sqrt(0.6*0.4)
beta_t <- beta_t/sqrt(0.25*0.75)
x_beta_test <- c(x_test_demean[1:(1000*alpha)]*beta_s, x_test_demean[((1000*alpha)+1):1000]*beta_t)
assertthat::assert_that(length(x_beta_test)==1000,
msg="Length of x_beta_test is not 1000??")
#print(length(x_beta_test))
#print(length(x_test_demean*beta_s))
return(data.frame(VAR = var(x_beta_test),
COV = cov(x_beta_test,x_test_demean*beta_s)))
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Average covariance = ", mean(results_foo$COV), ". Expected = ", ALPHA*0.81+(1-ALPHA)*rho*0.25*0.75)
}
for (ALPHA in seq(0.1,0.9,length.out=9)) {
message(date(),": Alpha = ",ALPHA)
results_foo <- do.call(rbind,lapply(1:1000,
function(x) foo(alpha=ALPHA)))
message(date(), ": Average variance = ", mean(results_foo$VAR), ". Expected = ", 0.81)
message(date(),": Average covariance = ", mean(results_foo$COV), ". Expected = ", ALPHA*0.81+(1-ALPHA)*rho*0.81*sqrt(0.25*0.75/(0.4*0.6)))
}
?cor
a <- rnorm(100)
b <- a
b[61:100] <- 0
cov(a,a)
cov(a,b)
cov(b,b)
cov(a,b)/cov(b,b)
cor(a,b)
cov(a/sd(a),b)/cov(b,b)
cor(a/sd(a),b)
cov(a/sd(a),a/sd(a))
cov(b,b)
cov(a/sd(a),b)
cor(a/sd(a),b)
x <- seq(0,1,length.out=1000)
y <- sapply(x, function(t) {sqrt(1-t)})
plot(x,y)
x <- seq(0,1,length.out=1000)
y <- sapply(x, function(t) {(1-t)^(1.5)})
plot(x,y)
?error
??error
?warning
?stop
library(shiny); runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
?hidden
runApp('ex_app.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
1+1
runApp('ex_app_v2.R')
?updateSelectInput
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
runApp('ex_app_v2.R')
